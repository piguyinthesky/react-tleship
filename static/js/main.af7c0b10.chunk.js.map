{"version":3,"sources":["component/Square.js","component/Board.js","logic/calculateWinner.js","component/Game.js","logic/convertCoords.js","index.js"],"names":["Square","this","props","value","react_default","a","createElement","className","status","onClick","React","Component","Board","i","_this","Square_Square","key","concat","squares","Object","toConsumableArray","Array","window","CONSTS","NUM_COLS","keys","map","String","fromCharCode","charCodeAt","createSquares","_this2","_window$CONSTS","nr","NUM_ROWS","nc","j","renderSquare","calculateWinner","ships","every","cell","Game","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","placeShips","state","history","displayGrid","fill","move","stepNumber","message","_window$CONSTS2","sl","SHIP_LENGTH","to_place","NUM_SHIPS","Math","random","topr","floor","topc","leftr","leftc","slice","grid","length","setState","step","winner","moves","desc","ind","numCols","row","col","indexToA1","jumpTo","Board_Board","handleClick","class","id","EMPTY","ReactDOM","render","Game_Game","document","getElementById"],"mappings":"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","file":"static/js/main.af7c0b10.chunk.js","sourcesContent":["import React from 'react';\nimport './Square.css';\n\nexport default class Square extends React.Component {\n  status() {\n    if (this.props.value === 'X') return 'square hit';\n    else if (this.props.value === 'O') return 'square miss';\n    else if (this.props.value === null) return 'square empty';\n    else return 'square';\n  }\n\n  render() {\n    return (\n      <button className={this.status()} onClick={this.props.onClick}>\n        {this.props.value}\n      </button>\n    );\n  }\n}\n","import React from 'react';\nimport Square from './Square';\nimport './Board.css';\n\nexport default class Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        key={`square-${i}`}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\" key=\"header-row\" >\n          {\n            [\n              <Square key=\"empty\" value=\" \" />\n            ].concat(\n              [...Array(window.CONSTS.NUM_COLS).keys()].map((i) => \n                <Square \n                  key={`col-header-${i}`}\n                  value={String.fromCharCode('A'.charCodeAt(0) + i)}\n                />\n              )\n            )\n          }\n        </div>\n        {this.createSquares()}\n      </div>\n    );\n  }\n\n  createSquares() {\n    const { NUM_ROWS: nr, NUM_COLS: nc } = window.CONSTS;\n\n    return ([...Array(nr).keys()].map(i => (\n      <div className=\"board-row\" key={`row-${i}`}>\n        {\n          [\n            <Square\n              key={`row-header-${i}`} \n              value={i+1}\n            />\n          ].concat([...Array(nc).keys()].map(j =>\n            this.renderSquare(i * nc + j)\n          ))\n        }\n      </div>\n    )))\n  }\n}","export default function calculateWinner(ships, squares) {\n  return ships.every((cell, i) => {\n    if (cell === null)\n      return squares[i] === 'O' || squares[i] === null;\n    else\n      return squares[i] === 'X';\n  });\n}\n","import React from 'react';\nimport Board from './Board';\nimport Square from './Square';\nimport calculateWinner from '../logic/calculateWinner';\nimport { indexToA1 } from '../logic/convertCoords';\nimport './Game.css';\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    const { NUM_ROWS: nr, NUM_COLS: nc } = window.CONSTS;\n    this.placeShips();\n    this.state = {\n      history: [\n        {\n          displayGrid: Array(nr * nc).fill(null),\n          move: null,\n        }\n      ],\n      stepNumber: 0,\n    };\n    this.message = null;\n  }\n\n  placeShips() {\n    const { NUM_ROWS: nr, NUM_COLS: nc, SHIP_LENGTH: sl, NUM_SHIPS } = window.CONSTS;\n    let to_place = NUM_SHIPS;\n    \n    const squares = Array(nr * nc).fill(null);\n    const ships = {};\n\n    while (to_place > 0) {\n      if (Math.random() < 0.5) { // Arbitrarily, this means a vertical ship\n        const topr = Math.floor(Math.random() * (nr - sl + 1))\n        const topc = Math.floor(Math.random() * nc)\n\n        if ([...Array(sl).keys()].map(i => squares[(topr + i) * nc + topc] === null).every((cell) => cell === null)) {\n          for (let i = 0; i < sl; i += 1) {\n            squares[(topr + i) * nc + topc] = to_place\n          }\n\n          ships[to_place] = sl\n          to_place -= 1\n        }\n      } else { // Horizontal\n        const leftr = Math.floor(Math.random() * (nr))\n        const leftc = Math.floor(Math.random() * (nc - sl + 1))\n\n        if ([...Array(sl).keys()].map(i => squares[leftr * nc + leftc + i]).every((cell) => cell === null)) {\n          for (let i = 0; i < sl; i += 1) {\n            squares[leftr * nc + leftc + i] = to_place\n          }\n\n          ships[to_place] = sl\n          to_place -= 1\n        }\n      }\n    }\n\n    this.ships = ships;\n    this.squares = squares;\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const grid = history[history.length - 1].displayGrid.slice();\n\n    if (calculateWinner(this.squares, grid) || grid[i]) return;\n    \n    if (this.squares[i]) {\n      grid[i] = 'X';\n      this.message = <div>Nice hit!</div>;\n    } else {\n      grid[i] = 'O';\n      this.message = <div>You missed. Fire again!</div>;\n    }\n\n    this.setState({\n      history: history.concat([\n        {\n          displayGrid: grid,\n          move: i,\n        }\n      ]),\n      stepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const grid = history[this.state.stepNumber].displayGrid;\n    const winner = calculateWinner(this.squares, grid);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        `Go to move #${move}: ${indexToA1(step.move)}` :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status = winner ? `You won in ${this.state.stepNumber} moves! Click 'Go to game start' to play again.` : `Click a square to make your move!`;\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={grid}\n            onClick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          {this.message}\n          <div className=\"tooltip\">\n            Hover over me for help!\n            <span class=\"tooltiptext\">There are {window.CONSTS.NUM_SHIPS} on the board, each of which span {window.CONSTS.SHIP_LENGTH} tiles horizontally or vertically. If you click on all three sections of a ship, you sink it! Sink all {window.CONSTS.NUM_SHIPS} ships to win.</span>\n          </div>\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n        <div className=\"help\">\n          <div id=\"help-hit\">\n            <Square key='help-hit' value='X' /> \n            <h3>Hit</h3>\n          </div>\n          <div id='help-miss'>\n            <Square key='help-miss' value='O' />\n            <h3>Miss</h3>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export function a1ToIndex(a1, nc) {\n  if (/[a-z]/i.test(a1[0]) && /[0-9]+/.test(a1.slice(1))) {\n    let row = parseInt(a1[1]) - 1\n    let col = a1.toUpperCase().charCodeAt(0) - 'A'.charCodeAt(0);\n    let numCols = nc || window.CONSTS ? window.CONSTS.NUM_COLS : 7;\n    return row * numCols + col;\n  } else {\n    return -1;\n  }\n}\n\nexport function indexToA1(ind, nc) {\n  let numCols = nc || window.CONSTS ? window.CONSTS.NUM_COLS : 7;\n  let row = Math.floor(ind / numCols);\n  let col = ind % numCols;\n  return `${String.fromCharCode('A'.charCodeAt(0) + col)}${row + 1}`;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './component/Game';\nimport './index.css';\n\nwindow.CONSTS = {\n  NUM_ROWS: 7,\n  NUM_COLS: 7,\n  SHIP_LENGTH: 3,\n  NUM_SHIPS: 3,\n  EMPTY: ' ',\n}\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}